// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String? @db.Text
  access_token       String? @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String? @db.Text
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?
  password           String?
  verificationToken  String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Profile {
  id       String  @id @default(cuid())
  username String  @unique
  user     User    @relation(fields: [userId], references: [id])
  userId   String  @unique
  location String?
  bio      String?
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String?   @unique
  emailVerified DateTime? @default(now())
  image         String?   @db.Text
  accounts      Account[]
  sessions      Session[]
  Profile       Profile?
  Content       Content[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Tags {
  id       String    @id @default(cuid())
  name     String    @unique()
  contents Content[]
}

model Content {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  description String
  title       String
  image       String
  tags        Tags[]
  createdBy   User     @relation(fields: [userId], references: [id])
  userId      String 
}
